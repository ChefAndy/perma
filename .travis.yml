language: python
python:
  - "3.7"
env: CFLAGS="-O0"

dist: bionic

services:
  - docker
  - mysql

# make sure perma.test resolves to localhost so our tests work
addons:
  hosts:
    - perma.test
    - perma-archives.test
  apt:
    packages:
      - libnss3-tools

  # anything we might want to see from a failed build
  artifacts:
    paths:
      - perma_web/failed_test_files
    debug: true

cache:
  pip: true
  directories:
    - perma_web/node_modules

before_install:
  # technique from https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeChrome/Dockerfile.txt
  - sudo apt-get update && sudo apt-get -y install google-chrome-stable
  - CHROME_MAJOR_VERSION=$(google-chrome --version | sed -E "s/.* ([0-9]+)(\.[0-9]+){3}.*/\1/")
  - CHROME_DRIVER_VERSION=$(wget --no-verbose -O - "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_MAJOR_VERSION}")
  - wget https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
  - unzip chromedriver_linux64.zip
  - mv chromedriver ~/bin/chromedriver
  - chmod +x ~/bin/chromedriver
  # install certificate used by warcprox
  - mkdir -p $HOME/.pki/nssdb
  - certutil -d $HOME/.pki/nssdb -N --empty-password
  - certutil -d sql:$HOME/.pki/nssdb -A -t "C,," -n 'warcprox CA cert' -i services/warcprox/perma-warcprox-ca.pem
  # settings
  - cp perma_web/perma/settings/deployments/settings_travis.py perma_web/perma/settings/settings.py
  - cd perma_web

install:
  # python reqs
  - pip install -U pip
  - pip install -U pipenv
  - pipenv install --deploy --dev
  - pip install coveralls

  # node reqs
  - nvm install 6
  - npm install

before_script:
  # linting
  - flake8 .

  - sudo cp $TRAVIS_BUILD_DIR/services/mysql/conf.d/custom.cnf /etc/mysql/conf.d/
  - sudo service mysql restart

  - mysql -e 'CREATE DATABASE perma CHARACTER SET utf8;'

  # try to avoid mysql has gone away errors
  - mysql -e 'SET GLOBAL max_allowed_packet = 64*1024*1024;'
  - mysql -e 'SET GLOBAL wait_timeout = 36000;'
  - mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql

  # spin up selenium and webrecorder
  # healthcheck adapted from https://stackoverflow.com/a/46005602
  - docker-compose -f ../docker-compose-travis.yml up -d
  - sleep 10
  - sh -c "[ $(curl -o /dev/null --max-time 10 --head --silent --write-out "%{http_code}" http://perma-archives.test:8089/api/v1.yml) -eq 200 ] && echo 'Webrecorder API is up!' || (echo 'Webrecorder API not available'; exit 1)"
  - sh -c "[ $(curl -o /dev/null --max-time 10 --head --silent --write-out "%{http_code}" http://perma-archives.test:8092/) -eq 303 ] && echo 'Webrecorder content host responsive!' || (echo 'Webrecorder content host not available'; exit 1)"
  - docker-compose -f ../docker-compose-travis.yml exec selenium sh -c "[ $(curl -o /dev/null --max-time 10 --head --silent --write-out "%{http_code}" http://perma-archives.test:8089/api/v1.yml) -eq 200 ] && echo 'Selenium container can communicate with Webrecorder' || (echo 'Selenium container cannot communicate with Webrecorder...'; exit 1)"

  # create the WR user necessary for public playbacks
  - bash ../init_wr.sh
  - date

script:
  - pipenv run fab dev.test_python:travis=True
  - pipenv run fab dev.test_js

after_failure:
  - date
  - docker-compose -f ../docker-compose-travis.yml logs
after_success:
  - date
  - coverage report
  - coveralls
